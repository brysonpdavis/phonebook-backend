{"version":3,"sources":["services/phonebook.js","components/NameForm.js","components/Numbers.js","components/Search.js","components/Notification.js","components/App.js","index.js"],"names":["baseUrl","exports","getAll","axios","get","then","response","data","create","newObj","post","update","id","put","remove","delete","NameForm","persons","setPersons","setErrorMessage","setNotificationMessage","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","event","preventDefault","reduce","prev","entry","name","window","confirm","entryToUpdate","find","newEntry","number","service","result","map","setTimeout","catch","error","entryObject","concat","value","onChange","target","type","DeleteButton","onClick","filter","obj","Entry","Numbers","searchTerm","toLowerCase","includes","Search","setSearch","Notification","message","style","App","setSearchTerm","errorMessage","notificationMessage","useEffect","console","log","length","color","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7773c19.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = \"http://localhost:3001/api/persons\"\n\nconst getAll = () => {\n    return axios.get(baseUrl).then(response => response.data)\n}\n\nconst create = newObj => {\n    return axios.post(baseUrl, newObj).then(response => response.data)\n}\n\nconst update = (id, newObj) => {\n    return axios.put(`${baseUrl}/${id}`, newObj).then(response => response.data)\n}\n\nconst remove = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nconst exports = {getAll, create, update, remove}\n\nexport default exports","import React, { useState } from 'react'\nimport service from '../services/phonebook'\n\nconst NameForm = ({persons, setPersons, setErrorMessage, setNotificationMessage}) => {\n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n  \n    const handleNameChange = (event) => {\n      setNewName(event.target.value)\n    }   \n  \n    const handleNumberChange = (event) => {\n      setNewNumber(event.target.value)\n    }\n    \n    const addEntry = (event) => {\n      event.preventDefault()\n  \n      if (persons.reduce((prev, entry) => entry.name === newName || prev, false))\n      {\n        if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n          const entryToUpdate = persons.find(entry => entry.name === newName)\n          const newEntry = {...entryToUpdate, number: newNumber}\n          \n          service.update(entryToUpdate.id, newEntry)\n          .then(result => \n            {\n              setPersons(persons.map(entry => entry.id === entryToUpdate.id ? result : entry))\n              setNotificationMessage(`${newName}'s number changed`)\n              setTimeout(() => setNotificationMessage(null) ,5000)\n            }\n          )\n          .catch( error => {\n            setErrorMessage(`Information of ${newName} has already been removed from server`)\n            setTimeout(() => setErrorMessage(null), 5000)\n          })\n        }\n      }\n      else {\n        const entryObject = {\n          name: newName,\n          number: newNumber\n        }\n\n        service.create(entryObject)\n        .then(\n          response => {\n            setPersons(persons.concat(response))\n            setNewName('')  \n            setNewNumber('')\n\n            setNotificationMessage(`Added ${newName}`)\n            setTimeout(() => setNotificationMessage(null), 5000)\n          }\n        )\n      }\n    }  \n  \n    return (\n      <>\n        <h1>add new</h1>\n        <form onSubmit={addEntry} >\n        <div>\n          name: <input value = {newName} onChange={handleNameChange} />\n        </div>\n        <div>\n          number: <input value  = {newNumber} onChange={handleNumberChange}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </>\n    )\n}\n  \nexport default NameForm","import React from 'react'\nimport service from '../services/phonebook'\n\nconst DeleteButton = ({name, persons, setPersons, id}) => {\n    const remove = () => {\n        if (window.confirm(`Do you want to delete entry for ${name}`)) {\n            service.remove(id).then(() => setPersons(persons.filter((obj => obj.id !== id))) )\n        }\n    }\n\n    return <button onClick = {remove}>delete</button>\n}\n\nconst Entry = ({entry, persons, setPersons}) => (\n    <li>{entry.name} {entry.number} <DeleteButton name = {entry.name} persons={persons} setPersons={setPersons} id = {entry.id} /></li>\n)\n    \nconst Numbers = ({persons, setPersons, searchTerm}) => {\n\n    const containsSearchTerm = entry => {\n    return entry.name.toLowerCase().includes(searchTerm.toLowerCase())\n    }\n\n    return (\n    <>\n        <h2>Numbers</h2>\n        <ul>\n        {\n            persons\n            .filter(containsSearchTerm)\n            .map(entry =>  \n                <Entry \n                    entry = {entry} \n                    persons={persons} \n                    setPersons = {setPersons}\n                    key = {entry.name} \n                />) \n        }\n        </ul>\n    </>\n    )\n}\n    \nexport default Numbers","import React from 'react'\n\nconst Search = ({searchTerm, setSearch}) => {\n  \n    const handleSearchTermChange = (event) => {\n      setSearch(event.target.value)\n    } \n  \n    return (\n      <form>\n        Search: <input value={searchTerm} onChange={handleSearchTermChange} />\n      </form>\n    )\n}\n\nexport default Search","import React from 'react'\n\n\nconst Notification = ({ message, style }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div style = {style}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport NameForm from './NameForm'\nimport Numbers from './Numbers'\nimport Search from './Search'\nimport Notification from './Notification'\nimport service from '../services/phonebook'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ searchTerm, setSearchTerm ] = useState('')\n  const [ errorMessage, setErrorMessage ] =useState(null)\n  const [ notificationMessage, setNotificationMessage ] = useState(null)\n\n  const errorStyleObj = {\n    color: \"red\"\n  }\n\n  const notificationStyleObj = {\n    color: \"green\"\n  }\n\n  const fetch = () => {\n    service.getAll()\n      .then( response => {\n        console.log('promise fulfilled')\n        setPersons(response)\n      })\n  }\n\n  useEffect( fetch, [] )\n\n  console.log('render', persons.length, 'persons')\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message = {errorMessage} style = {errorStyleObj} />\n      <Notification message = {notificationMessage} style = {notificationStyleObj} />\n      <Search searchTerm = {searchTerm} setSearch = {setSearchTerm}/>\n      <NameForm persons = {persons} setPersons = {setPersons} setErrorMessage={setErrorMessage} setNotificationMessage={setNotificationMessage}  />\n      <Numbers persons = {persons} setPersons={setPersons} searchTerm = {searchTerm} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}